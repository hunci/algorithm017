public class Combine {
    public List<List<Integer>> combine(int n, int k){
        if(n < k || k<=0){
            return null;
        }
        Deque<Integer> path = new LinkedList<>();
        List<List<Integer>> res = new ArrayList<>();
        this.dfs(n, k, 1, path, res);
    }

    private void dfs(int n, int k, int begin, Deque path, List<List<Integer>> res) {
        if(path.size() == k){
            res.add(new ArrayList<>(path));
        }
        for(int i = begin; i <= n; i++){
            path.addLast(i);
            dfs(n, k, i+1, path, res);
            path.removeLast();
        }
    }

}